{"timestamp":"2025-07-26T14:29:03.822350","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-26T14:29:03.823665","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/hw_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-26T14:29:07.196640Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-26T14:29:07.197464Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-26T14:29:07.198942Z","level":"info","event":"Current task name:pipeline","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-26T14:29:07.199707Z","level":"info","event":"Dag name:car_price_prediction","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-26T14:29:10.101440","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/linear_model/_logistic.py:1296: FutureWarning: Using the 'liblinear' solver for multiclass classification is deprecated. An error will be raised in 1.8. Either use another solver which supports the multinomial loss or wrap the estimator in a OneVsRestClassifier to keep applying a one-versus-rest scheme.\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-07-26T14:29:10.873897","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/linear_model/_logistic.py:1296: FutureWarning: Using the 'liblinear' solver for multiclass classification is deprecated. An error will be raised in 1.8. Either use another solver which supports the multinomial loss or wrap the estimator in a OneVsRestClassifier to keep applying a one-versus-rest scheme.\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-07-26T14:29:11.887829","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/linear_model/_logistic.py:1296: FutureWarning: Using the 'liblinear' solver for multiclass classification is deprecated. An error will be raised in 1.8. Either use another solver which supports the multinomial loss or wrap the estimator in a OneVsRestClassifier to keep applying a one-versus-rest scheme.\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-07-26T14:29:12.454616","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/sklearn/linear_model/_logistic.py:1296: FutureWarning: Using the 'liblinear' solver for multiclass classification is deprecated. An error will be raised in 1.8. Either use another solver which supports the multinomial loss or wrap the estimator in a OneVsRestClassifier to keep applying a one-versus-rest scheme.\n  warnings.warn(\n","logger":"py.warnings"}
{"timestamp":"2025-07-26T14:29:12.826902","level":"info","event":"model: LogisticRegression, acc_mean: 0.7591, acc_std: 0.0075","logger":"root"}
{"timestamp":"2025-07-26T14:30:16.785924","level":"info","event":"model: RandomForestClassifier, acc_mean: 0.7783, acc_std: 0.0059","logger":"root"}
{"timestamp":"2025-07-26T14:30:48.591542","level":"info","event":"model: SVC, acc_mean: 0.7871, acc_std: 0.0042","logger":"root"}
{"timestamp":"2025-07-26T14:30:48.591875","level":"info","event":"best model: SVC, accuracy: 0.7871","logger":"root"}
{"timestamp":"2025-07-26T14:30:59.028064","level":"info","event":"Model is saved as /opt/airflow/data/models/cars_pipe_202507261430.pkl","logger":"root"}
{"timestamp":"2025-07-26T14:30:59.032969","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-26T14:30:59.077403Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-26T14:30:59.077932Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-26T14:30:59.078470Z","level":"info","event":"Task operator:<Task(PythonOperator): pipeline>","chan":"stdout","logger":"task"}
